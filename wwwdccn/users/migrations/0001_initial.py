# Generated by Django 3.0.8 on 2020-07-26 05:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import users.managers
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('has_finished_registration', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_email', models.BooleanField(default=False, verbose_name='I agree to receive transactional emails from DCCN Registration System corresponding to actions related to me (e.g., submission status update, adding me as a co-author, invitations for review, etc.)')),
                ('info_email', models.BooleanField(default=False, verbose_name='I agree to receive informational emails related to DCCN 2019 and future DCCN events')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name in English')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name in English')),
                ('first_name_rus', models.CharField(blank=True, default='', max_length=100, verbose_name='First Name in Russian')),
                ('middle_name_rus', models.CharField(blank=True, default='', max_length=100, verbose_name='Middle Name in Russian')),
                ('last_name_rus', models.CharField(blank=True, default='', max_length=100, verbose_name='Last Name in Russian')),
                ('country', django_countries.fields.CountryField(max_length=2, null=True, verbose_name='Country')),
                ('city', models.CharField(max_length=100, verbose_name='City in English')),
                ('birthday', models.DateField(null=True, verbose_name='Birthday')),
                ('affiliation', models.CharField(max_length=100, verbose_name='Name of your organization in English')),
                ('role', models.CharField(choices=[(None, 'Select your role'), ('Student', 'Student'), ('PhD Student', 'PhD Student'), ('Assistant', 'Assistant'), ('Researcher', 'Researcher'), ('Assistant Professor', 'Assistant Professor'), ('Associate Professor', 'Associate Professor'), ('Professor', 'Professor'), ('Head of Department', 'Head of Department'), ('Head of Faculty', 'Head of Faculty'), ('Head of Laboratory', 'Head of Laboratory'), ('Vice Rector', 'Vice Rector'), ('Rector', 'Rector'), ('Software Developer', 'Software Developer'), ('Engineer', 'Engineer'), ('Technician', 'Technician'), ('Economist', 'Economist'), ('Lawyer', 'Lawyer'), ('Instructor', 'Instructor'), ('Consultant', 'Consultant'), ('Manager', 'Manager'), ('Administrator', 'Administrator'), ('Analyst', 'Analyst'), ('Journalist', 'Journalist'), ('Writer', 'Writer'), ('Editor', 'Editor'), ('Librarian', 'Librarian'), ('Vice Director', 'Vice Director'), ('Chief Executive Officer', 'Chief Executive Officer'), ('Retired', 'Retired'), ('Other', 'Other')], max_length=30, null=True, verbose_name='Primary role in organization')),
                ('degree', models.CharField(choices=[(None, 'Select your degree'), ('Undergraduate', 'Undergraduate'), ('Bachelor', 'Bachelor'), ('Master', 'Master'), ('PhD', 'PhD'), ('Candidate of Sciences', 'Candidate of Sciences'), ('Doctor of Sciences', 'Doctor of Sciences')], max_length=30, null=True, verbose_name='Degree')),
                ('ieee_member', models.BooleanField(default=False, verbose_name='I am an IEEE Member')),
                ('preferred_language', models.CharField(choices=[('ENG', 'English'), ('RUS', 'Russian')], default='ENG', max_length=3)),
                ('avatar', models.ImageField(blank=True, upload_to=users.models.get_avatar_full_path)),
                ('avatar_version', models.IntegerField(blank=True, default=0, editable=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
