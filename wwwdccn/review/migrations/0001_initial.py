# Generated by Django 3.0.8 on 2020-07-26 05:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('conferences', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked', models.BooleanField(default=False)),
                ('technical_merit', models.IntegerField(blank=True, choices=[(None, 'Choose your score'), (1, '1 - Very Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], default=None, null=True)),
                ('clarity', models.IntegerField(blank=True, choices=[(None, 'Choose your score'), (1, '1 - Very Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], default=None, null=True)),
                ('relevance', models.IntegerField(blank=True, choices=[(None, 'Choose your score'), (1, '1 - Very Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], default=None, null=True)),
                ('originality', models.IntegerField(blank=True, choices=[(None, 'Choose your score'), (1, '1 - Very Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], default=None, null=True)),
                ('details', models.TextField()),
                ('submitted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewDecision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewDecisionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.CharField(choices=[('ACCEPT', 'Accept submission'), ('REJECT', 'Reject submission')], default='ACCEPT', max_length=6)),
                ('description', models.CharField(blank=True, default='', max_length=1024)),
            ],
            options={
                'ordering': ['conference_id', 'decision', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_reviews_required', models.IntegerField()),
                ('score', models.FloatField(blank=True, default=None, null=True)),
                ('locked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_submissions_reviewed', models.IntegerField(default=0, verbose_name='Number of submissions with all reviews submitted')),
                ('num_submissions_with_incomplete_reviews', models.IntegerField(default=0, verbose_name='Number of submissions with incomplete reviews')),
                ('num_submissions_with_missing_reviewers', models.IntegerField(default=0, verbose_name='Number of submissions missing one or more reviewers')),
                ('average_score', models.FloatField(default=0.0, verbose_name='Average score over all completely reviewed submissions')),
                ('median_score', models.FloatField(default=0.0, verbose_name='Median score over all completely reviewed submissions')),
                ('q1_score', models.FloatField(default=0.0, verbose_name='Q1 score (25% are not greater then)')),
                ('q3_score', models.FloatField(default=0.0, verbose_name='Q3 score (25% are not less then)')),
                ('conference', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review_stats', to='conferences.Conference')),
            ],
        ),
    ]
