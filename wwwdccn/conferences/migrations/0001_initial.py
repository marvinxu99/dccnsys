# Generated by Django 3.0.8 on 2020-07-26 05:15

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArtifactDescriptor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('ANY', 'Any file'), ('PDF', 'PDF files only'), ('SCAN', 'Any PDF or image file'), ('ZIP', 'ZIP archive')], default='ANY', max_length=8, verbose_name='Type of files expected')),
                ('max_size_mb', models.IntegerField(default=10, verbose_name='Maximum size in MB')),
                ('name', models.CharField(max_length=256)),
                ('code', models.CharField(default='FINAL', max_length=8, verbose_name='Alphanumeric code to append to file name')),
                ('description', models.TextField(verbose_name='Description of the artifact')),
                ('mandatory', models.BooleanField(default=True, verbose_name='Artifact is mandatory')),
                ('editable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArtifactDescriptorLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=300, verbose_name='Full name of the conference')),
                ('short_name', models.CharField(max_length=30, verbose_name='Short name of the conference')),
                ('is_ieee', models.BooleanField(default=False, verbose_name='The conference is supported by IEEE')),
                ('country', django_countries.fields.CountryField(max_length=2, null=True, verbose_name='Country')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('start_date', models.DateField(null=True, verbose_name='Opens at')),
                ('close_date', models.DateField(null=True, verbose_name='Closes at')),
                ('logotype', models.ImageField(blank=True, null=True, upload_to='public//conferences/logo/', verbose_name='Conference logotype')),
                ('description', models.TextField(blank=True, default='', verbose_name='Medium length description of the conference')),
                ('site_url', models.URLField(blank=True, default='', verbose_name='Conference informational site')),
                ('contact_email', models.EmailField(blank=True, default='', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, default='')),
                ('label', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ProceedingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Short name')),
                ('description', models.CharField(max_length=1000, verbose_name='Long description')),
                ('final_manuscript_deadline', models.DateTimeField(null=True, verbose_name='Deadline for final manuscript submission')),
                ('min_num_pages', models.IntegerField(default=4, verbose_name='Minimum number of pages in submission')),
                ('max_num_pages', models.IntegerField(default=4, verbose_name='Maximum number of pages in submission')),
                ('final_latex_template', models.FileField(blank=True, null=True, upload_to='public//conferences/templates', verbose_name='LaTeX template for final manuscript')),
                ('_final_latex_template_version', models.IntegerField(default=1)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Topic name')),
                ('order', models.IntegerField(default=0)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SubmissionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Short name')),
                ('description', models.CharField(max_length=1000, verbose_name='Long description')),
                ('language', models.TextField(choices=[(None, 'Select submission language'), ('RU', 'Russian'), ('EN', 'English')], max_length=2)),
                ('latex_template', models.FileField(null=True, upload_to='public//conferences/templates', verbose_name='LaTeX template')),
                ('_latex_template_version', models.IntegerField(default=1)),
                ('num_reviews', models.IntegerField(default=2, verbose_name='Number of reviews per submission')),
                ('min_num_pages', models.IntegerField(default=4, verbose_name='Minimum number of pages in submission')),
                ('max_num_pages', models.IntegerField(default=4, verbose_name='Maximum number of pages in submission')),
                ('blind_review', models.BooleanField(default=False, verbose_name='Blind review')),
                ('min_num_words_in_review', models.IntegerField(default=150, verbose_name='Minimum number of words in the review')),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference')),
                ('possible_proceedings', models.ManyToManyField(to='conferences.ProceedingType')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Deadline for submissions')),
                ('end_date_description', models.CharField(blank=True, max_length=100)),
                ('conference', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='submission_stage', to='conferences.Conference')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateTimeField(null=True, verbose_name='End of review')),
                ('conference', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review_stage', to='conferences.Conference')),
            ],
        ),
        migrations.CreateModel(
            name='ProceedingVolume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Short name')),
                ('description', models.TextField(verbose_name='Description')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volumes', to='conferences.ProceedingType')),
            ],
        ),
    ]
